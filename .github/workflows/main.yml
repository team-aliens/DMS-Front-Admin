name: DMS-Front-CI

on: 
  push:
    branches:
      - 'feature/**' # git-flow에서 push할 branch 명시
      - 'hotfixes'
      - 'release/**'
      - 'main'
      - 'develop'
  pull_request: 
    branches: 
      - 'main' # git-flow에서 pr을 날릴 branch 명시
      - 'develop'
      - 'release/**'

# 반복 삭제 
concurrency:
  # 그룹을 pr의 head_ref로 정의
  group: ${{ github.workflow }}-${{ github.ref }}
  # 해당 pr에서 새로운 워크플로우가 실행될 경우, 이전에 워크플로우가 있다면 이전 워크플로우를 취소하도록 한다.
  cancel-in-progress: true
      
jobs: 
  type-check: # type check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16.x]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Check types
        run: |
          tsc
    
  enable-yarn-cashe: # yarn casheing
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        node: [16.x]
    steps:
      - name: Restoring Yarn cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Bootstraping packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
    
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16.x]
    needs: [type-check, enable-yarn-cashe]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Run build
        run: |
          npm run build
